{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MEAN';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\" style=\"margin-top: 80px;\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ValidateService } from './services/validate.service'\nimport { AuthService } from './services/auth.service';\n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegisterComponent,\n    LoginComponent,\n    ProfileComponent,\n    DashboardComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n    HttpClientModule\n  ],\n\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">DashBoard</h2>\n<p>Welcome to your dashboard</p>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n  <h1 class=\"display-4\">MEAN application</h1>\n  <p class=\"lead\">This is a basic MEAN stack application with authentication</p>\n  <hr class=\"my-4\">\n  <p class=\"lead\">\n\n  </p>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n    <h3>Node/Express backend</h3>\n    <p>Express is a minimal and flexible Node.js web application framework\n      that provides a robust set of features for web and mobile applications.</p>\n  </div>\n\n  <div class=\"col-md-4\">\n    <h3>Angular/Cli</h3>\n    <p>The Angular CLI makes it easy to create an application that already works, right out of the box.\n      It already follows our best practices!</p>\n  </div>\n\n  <div class=\"col-md-4\">\n    <h3>JWT Tokens</h3>\n    <p>JSON Web Token (JWT) is an internet standard for creating JSON-based access tokens that assert some number of claims.</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessagesService: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe((data: any) => {\n      if (data.success) {\n        this.authService.storeUser(data.token, data.user);\n        this.flashMessagesService.show('You are now login', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.flashMessagesService.show(data.msg, {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n}\n","\n<div class=\"text-center\">\n<form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n  <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n  <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n  <input type=\"text\" id=\"inputUsername\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Email address\">\n\n  <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n  <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\">\n\n  <label class=\"checkbox mb-3\"><input type=\"checkbox\" value=\"remember-me\"> Remember me</label>\n\n  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n  <p class=\"mt-5 mb-3 text-muted\">&copy; 2017-2019</p>\n</form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private flashMessagesService: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessagesService.show('You are now logout', {cssClass: 'alert-success', timeout: 3000});\n    this.router.navigate(['/login']);\n    return false\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\">MEAN app</a>\n  <div class=\"collapse navbar-collapse\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/']\">Home</a>\n      </li>\n    </ul>\n  </div>\n\n    <ul class=\"navbar-nav mr-auto\">\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">DashBoard</a>\n      </li>\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n      </li>\n      <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n      </li>\n      <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n      </li>\n\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"onLogoutClick()\">Logout</a>\n      </li>\n    </ul>\n</nav>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe((profile: any) => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n\n\n\n}\n","<div *ngIf=\"user\">\n  <h2 class=\"page-header\">{{ user.name }}</h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username: {{ user.username }}</li>\n    <li class=\"list-group-item\">Email: {{ user.email }}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n\n  constructor(private validateService: ValidateService,\n              private flashMessagesService: FlashMessagesService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n    };\n\n    // check register fields\n    if (!this.validateService.validateRegister(user)) {\n      this.flashMessagesService.show('please fill in all fields !', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // check email\n    if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessagesService.show('please fill in valid email !', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // register user\n    this.authService.registerUser(user).pipe().subscribe(\n      data => {\n        this.flashMessagesService.show('You are now registered and can login', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login']);\n      },\n      error => {\n        this.flashMessagesService.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      },\n    );\n  }\n}\n","\n<div class=\"text-center\">\n  <form class=\"form-register\" (submit)=\"onRegisterSubmit()\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Please register</h1>\n\n    <label for=\"inputName\" class=\"sr-only\">Name</label>\n    <input type=\"text\" id=\"inputName\" class=\"form-control\" [(ngModel)]=\"name\" name=\"name\" placeholder=\"name\">\n\n    <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n    <input type=\"text\" id=\"inputUsername\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"username\">\n\n    <label for=\"inputEmail\" class=\"sr-only\">Email</label>\n    <input type=\"email\" id=\"inputEmail\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"email\">\n\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\">\n\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\n    <p class=\"mt-5 mb-3 text-muted\">&copy; 2017-2019</p>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport {Router, CanActivate, UrlTree, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  authToken: string;\n  user: any;\n\n  constructor(private http: HttpClient) {}\n\n  registerUser(user) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers})\n      .pipe(map(res => res));\n  }\n\n  authenticateUser(user) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers})\n      .pipe(map(res => res));\n  }\n\n  getProfile() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n    let headers = new HttpHeaders();\n    headers = headers.append('Authorization', token);\n    headers = headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/users/profile', {headers});\n  }\n\n  storeUser(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loggedIn() {\n    const helper = new JwtHelperService();\n    return !helper.isTokenExpired(this.authToken);\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name === undefined || user.username === undefined || user.password === undefined || user.email === undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}