{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","AppModule","forRoot","declarations","imports","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","authService","router","flashMessagesService","user","username","password","authenticateUser","subscribe","data","success","storeUser","token","show","cssClass","timeout","navigate","msg","onLoginSubmit","NavbarComponent","logout","ProfileComponent","getProfile","profile","err","console","log","RegisterComponent","validateService","name","email","validateRegister","validateEmail","registerUser","pipe","error","onRegisterSubmit","AuthGuard","route","state","loggedIn","AuthService","http","headers","append","post","res","localStorage","getItem","authToken","get","setItem","JSON","stringify","helper","isTokenExpired","clear","providedIn","ValidateService","undefined","re","test","String","toLowerCase","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MEAN';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\" style=\"margin-top: 80px;\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from './guards/auth.guard';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ValidateService } from './services/validate.service'\nimport { AuthService } from './services/auth.service';\n\nconst appRoutes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\n  {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegisterComponent,\n    LoginComponent,\n    ProfileComponent,\n    DashboardComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot(),\n    HttpClientModule\n  ],\n\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">DashBoard</h2>\n<p>Welcome to your dashboard</p>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n  <h1 class=\"display-4\">MEAN application</h1>\n  <p class=\"lead\">This is a basic MEAN stack application with authentication</p>\n  <hr class=\"my-4\">\n  <p class=\"lead\">\n\n  </p>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-md-4\">\n    <h3>Node/Express backend</h3>\n    <p>Express is a minimal and flexible Node.js web application framework\n      that provides a robust set of features for web and mobile applications.</p>\n  </div>\n\n  <div class=\"col-md-4\">\n    <h3>Angular/Cli</h3>\n    <p>The Angular CLI makes it easy to create an application that already works, right out of the box.\n      It already follows our best practices!</p>\n  </div>\n\n  <div class=\"col-md-4\">\n    <h3>JWT Tokens</h3>\n    <p>JSON Web Token (JWT) is an internet standard for creating JSON-based access tokens that assert some number of claims.</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessagesService: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    };\n\n    this.authService.authenticateUser(user).subscribe((data: any) => {\n      if (data.success) {\n        this.authService.storeUser(data.token, data.user);\n        this.flashMessagesService.show('You are now login', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.flashMessagesService.show(data.msg, {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/login']);\n      }\n    });\n  }\n\n}\n","\n<div class=\"text-center\">\n<form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n  <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n  <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n  <input type=\"text\" id=\"inputUsername\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Email address\">\n\n  <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n  <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\">\n\n  <label class=\"checkbox mb-3\"><input type=\"checkbox\" value=\"remember-me\"> Remember me</label>\n\n  <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n  <p class=\"mt-5 mb-3 text-muted\">&copy; 2017-2019</p>\n</form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\n\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private flashMessagesService: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessagesService.show('You are now logout', {cssClass: 'alert-success', timeout: 3000});\n    this.router.navigate(['/login']);\n    return false\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\">MEAN app</a>\n  <div class=\"collapse navbar-collapse\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/']\">Home</a>\n      </li>\n    </ul>\n  </div>\n\n    <ul class=\"navbar-nav mr-auto\">\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">DashBoard</a>\n      </li>\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n      </li>\n      <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n      </li>\n      <li *ngIf=\"!authService.loggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\">\n        <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n      </li>\n\n      <li *ngIf=\"authService.loggedIn()\" class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\" (click)=\"onLogoutClick()\">Logout</a>\n      </li>\n    </ul>\n</nav>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent implements OnInit {\n  user: any;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe((profile: any) => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n\n\n\n}\n","<div *ngIf=\"user\">\n  <h2 class=\"page-header\">{{ user.name }}</h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username: {{ user.username }}</li>\n    <li class=\"list-group-item\">Email: {{ user.email }}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n\n  constructor(private validateService: ValidateService,\n              private flashMessagesService: FlashMessagesService,\n              private authService: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password,\n    };\n\n    // check register fields\n    if (!this.validateService.validateRegister(user)) {\n      this.flashMessagesService.show('please fill in all fields !', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // check email\n    if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessagesService.show('please fill in valid email !', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n\n    // register user\n    this.authService.registerUser(user).pipe().subscribe(\n      data => {\n        this.flashMessagesService.show('You are now registered and can login', {cssClass: 'alert-success', timeout: 3000});\n        this.router.navigate(['/login']);\n      },\n      error => {\n        this.flashMessagesService.show('Something went wrong', {cssClass: 'alert-danger', timeout: 3000});\n        this.router.navigate(['/register']);\n      },\n    );\n  }\n}\n","\n<div class=\"text-center\">\n  <form class=\"form-register\" (submit)=\"onRegisterSubmit()\">\n    <h1 class=\"h3 mb-3 font-weight-normal\">Please register</h1>\n\n    <label for=\"inputName\" class=\"sr-only\">Name</label>\n    <input type=\"text\" id=\"inputName\" class=\"form-control\" [(ngModel)]=\"name\" name=\"name\" placeholder=\"name\">\n\n    <label for=\"inputUsername\" class=\"sr-only\">Username</label>\n    <input type=\"text\" id=\"inputUsername\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"username\">\n\n    <label for=\"inputEmail\" class=\"sr-only\">Email</label>\n    <input type=\"email\" id=\"inputEmail\" class=\"form-control\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"email\">\n\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\">\n\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Register</button>\n    <p class=\"mt-5 mb-3 text-muted\">&copy; 2017-2019</p>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport {Router, CanActivate, UrlTree, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  authToken: string;\n  user: any;\n\n  constructor(private http: HttpClient) {}\n\n  registerUser(user) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers})\n      .pipe(map(res => res));\n  }\n\n  authenticateUser(user) {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers})\n      .pipe(map(res => res));\n  }\n\n  getProfile() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n    let headers = new HttpHeaders();\n    headers = headers.append('Authorization', token);\n    headers = headers.append('Content-Type', 'application/json');\n    return this.http.get('http://localhost:3000/users/profile', {headers});\n  }\n\n  storeUser(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loggedIn() {\n    const helper = new JwtHelperService();\n    return !helper.isTokenExpired(this.authToken);\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name === undefined || user.username === undefined || user.password === undefined || user.email === undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}